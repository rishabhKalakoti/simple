%{
#include<stdio.h>
#include<string.h>
#include"lex.h"
%}

FILE *yyin
%%
$[a-zA-Z0-9_]*	  		printf("#VAR");addSymbol(yytext, "#VAR");
[0-9][0-9]*	  			printf("#NUM");addSymbol(yytext, "#NUM");
[func [a-zA-Z0-9_]*]	printf("#FUNC#SPACE#FNAME");
[ ]						printf("#SPACE");
\n						printf("#NEWLINE");
[ and | or ]			printf("#LOGICOP");
`[a-zA-Z0-9_]*			printf("#LOGICOP#FNAME");
,						printf("#COMMA");
\(						printf("#LPAREN");
\)						printf("#RPAREN");
".*?"					printf("#STR");
==|>|<|>=|<=|!=			printf("#RELOP");
=						printf("#ASSTOP");
\+|\-|\*|\/				printf("#ARITHOP");
not						printf("#NOT");
if						printf("#IF");
func					printf("#FUNC");
end						printf("#END");
loop 					printf("#LOOP");
over					printf("#OVER");
next|out				printf("#BREAK");
%%
char list[10];
char table[10];
int yywrap()
{
	printf("\n\n-----------------SYMBOL TABLE-----------\n");
	printTable();
	return 1;
}

int main()
{
	yyin=fopen("code.simple","r");
	yylex();
	fclose(yyin);
	printf("\n");
	return 0;
}
